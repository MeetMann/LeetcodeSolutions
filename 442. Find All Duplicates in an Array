// Initial Solution
class Solution {
    public List<Integer> findDuplicates(int[] nums) {
        List<Integer> result = new ArrayList<>();
        Set<Integer> duplicates = new HashSet<>();

        for (int i = 0; i < nums.length; i++) {
            if (duplicates.contains(nums[i])) {
                result.add(nums[i]);
            }
            else {
                duplicates.add(nums[i]);
            }
        }

        return result;
    }
}

// Optimal Solution
class Solution {
    public List<Integer> findDuplicates(int[] nums) {
        List<Integer> result = new ArrayList<>();

        for (int i = 0; i < nums.length; i++) {
            int index = Math.abs(nums[i]) - 1; /
            
            if (nums[index] < 0) { 
                result.add(index + 1);
            } else {
                nums[index] = -nums[index]; 
            }
        }

        return result;
    }
}
